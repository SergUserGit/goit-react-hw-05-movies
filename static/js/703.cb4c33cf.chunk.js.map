{"version":3,"file":"static/js/703.cb4c33cf.chunk.js","mappings":"0NACA,EAA2B,yBAA3B,EAAgE,0BAAhE,EAAsG,0B,kBC0DtG,EAtDe,WACb,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAwBA,OACE,iCACE,kBAAMC,SAxBW,SAAAC,GACnBA,EAAIC,iBAEJ,IAAMC,GAAMC,EAAAA,EAAAA,GACV,eADwB,2DAE4BR,KAErCS,EAAAA,EAAAA,GAAYF,GAG1BG,MAAK,SAAAC,GACJR,GAAa,OAAIQ,EAAKC,SACvB,IACAC,OAAM,SAAAC,GAAW,IACjBC,SAAQ,WAAQ,GACpB,EASiCC,UAAWC,EAAzC,WACE,kBACED,UAAWC,EACXC,KAAK,OACLC,MAAOnB,EACPoB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,UAAQ,EACRC,SAhBa,SAAAC,GACnB,IAAQN,EAAUM,EAAEC,OAAZP,MACRlB,GAAY,SAAA0B,GAAK,OAAIR,CAAJ,GAClB,KAeK,mBAAQD,KAAK,SAAb,uBAEDhB,IACC,wBACGA,EAAU0B,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACb,eAAad,UAAWC,EAAxB,UACE,SAAC,KAAD,CAAMc,GAAE,kBAAaD,GAArB,SAA4BD,KADrBC,EADI,QASxB,C,6ECrDD,SAAStB,EAAewB,EAAeC,GACrC,MAHqB,gCAGGD,EAAjBE,4CAAyDD,CACjE,CAED,SAASxB,EAAYF,GACnB,OAAO4B,MAAM5B,GAAKG,MAAK,SAAA0B,GACrB,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,mHACjC,GACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.js","js/moduleapi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"findForm\":\"Movies_findForm__La+Xb\",\"findInput\":\"Movies_findInput__S9G-s\",\"movieItem\":\"Movies_movieItem__WBe6u\"};","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport css from './Movies.module.css';\nimport { getQueryString, getResponse } from '../../js/moduleapi';\n\nconst Movies = () => {\n  const [findText, setFindText] = useState('');\n  const [rendArray, setRendArray] = useState([]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const url = getQueryString(\n      'search/movie',\n      `&language=en-US&page=1&include_adult=false&query=${findText}`\n    );\n    const response = getResponse(url);\n\n    response\n      .then(data => {\n        setRendArray([...data.results]);\n      })\n      .catch(error => {})\n      .finally(() => {});\n  };\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setFindText(state => value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.findForm}>\n        <input\n          className={css.findInput}\n          type=\"text\"\n          value={findText}\n          name=\"find\"\n          autoComplete=\"off\"\n          autoFocus\n          required\n          onChange={handleChange}\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {rendArray && (\n        <ul>\n          {rendArray.map(({ title, id }) => (\n            <li key={id} className={css.movieItem}>\n              <Link to={`/movies/${id}`}>{title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","const API_KEY = '8bdb4b862ffa773481adb9dc6c5538df';\n\nconst firstPartQuery = 'https://api.themoviedb.org/3/';\n\nfunction getQueryString(partBeforeApi, partAfterApi) {\n  return firstPartQuery + partBeforeApi + '?api_key=' + API_KEY + partAfterApi;\n}\n\nfunction getResponse(url) {\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Немає даних по запиту'));\n  });\n}\n\nexport { getQueryString, getResponse };\n"],"names":["useState","findText","setFindText","rendArray","setRendArray","onSubmit","evt","preventDefault","url","getQueryString","getResponse","then","data","results","catch","error","finally","className","css","type","value","name","autoComplete","autoFocus","required","onChange","e","target","state","map","title","id","to","partBeforeApi","partAfterApi","firstPartQuery","fetch","response","ok","json","Promise","reject","Error"],"sourceRoot":""}